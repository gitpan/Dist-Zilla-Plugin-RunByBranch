name                = TestDzilPhasesBranches
abstract            = test all phases with branch regexes
version             = 1.01

author              = No One <n@bo.dy>
license             = None
copyright_holder    = Nobody


; choose/generate files to include

[GatherDir]
[License]

[RunByBranch::BeforeBuild]
run = ^dev %x script%prun.pl before_build %s %n %v .%d.%a. %x
run = ^testing/1 %x script%prun.pl before_build %s %n %v .%d.%a. %x
[RunByBranch::AfterBuild]
run = ^dev %x script%prun.pl after_build %n %v %d %s %s %v .%a. %x
run = ^testing/1.[0-9] %x script%prun.pl after_build %n %v %d %s %s %v .%a. %x
[RunByBranch::BeforeRelease]
run = ^dev %x script%prun.pl before_release %n -d %d %s -v %v .%a. %x
run = ^testing/1.[5-9] %x script%prun.pl before_release %n -d %d %s -v %v .%a. %x
[RunByBranch::Release]
run = ^dev %x script%prun.pl release %s %n %v %d/a %d/b %a %x
[RunByBranch::AfterRelease]
run = ^dev %x script%prun.pl after_release %d %v %s %s %n %a %x

; manifest (after all generated files)
[Manifest]
;[FakeRelease]
